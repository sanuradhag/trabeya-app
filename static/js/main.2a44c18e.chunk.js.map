{"version":3,"sources":["assets/avatar.png","assets/password-icn.png","assets/form-logo.jpg","components/side-pane/side-pane-item/SidePaneItem.js","components/side-pane/SidePane.js","components/password-form/PasswordForm.js","views/change-password/ChangePassword.js","components/header/Header.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SidePaneItem","title","icon","selected","selectedClass","className","color","size","SidePane","props","state","navItems","id","faHouseUser","faThLarge","faUser","faFileInvoice","faDesktop","expand","setWrapperRef","bind","handleClickOutside","document","addEventListener","this","removeEventListener","e","setState","onSideBarExpanded","node","wrapperRef","event","contains","target","map","navItem","key","alt","src","avatar","faEnvelope","mainClass","ref","onClick","handleClick","renderProfile","renderItems","renderEmailCount","Component","PasswordForm","oldPassword","newPassword","confirmPassword","invalid","value","validatePasswords","fromLogo","Form","Group","controlId","passwordIcon","Control","type","placeholder","onChange","onOldPasswordChange","onNewPasswordChange","onConfirmPasswordChange","faExclamationTriangle","Button","variant","ChangePassword","expanded","handleExpand","style","width","marginLeft","transition","aria-label","href","aria-current","Header","FormControl","faSearch","faBell","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a44c18e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.e67e358c.png\";","module.exports = __webpack_public_path__ + \"static/media/password-icn.76bfe709.png\";","module.exports = __webpack_public_path__ + \"static/media/form-logo.42c687fa.jpg\";","import React from \"react\";\n\nimport \"./side-pane-item.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst SidePaneItem = ({ title, icon, selected }) => {\n  const selectedClass = selected ? \"nav-link selected\" : \"nav-link\";\n  return (\n    <li className={selectedClass}>\n      <FontAwesomeIcon\n        icon={icon}\n        color={!selected ? \"white\" : \"#51A94B\"}\n        className={\"icon\"}\n        size={\"lg\"}\n      />\n      <span className={\"title\"}>{title}</span>\n    </li>\n  );\n};\n\nexport default SidePaneItem;\n","import React, { Component } from \"react\";\nimport \"./side-pane.scss\";\nimport avatar from \"../../assets/avatar.png\";\nimport SidePaneItem from \"./side-pane-item/SidePaneItem\";\nimport {\n  faHouseUser,\n  faUser,\n  faDesktop,\n  faFileInvoice,\n  faThLarge,\n  faEnvelope\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass SidePane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItems: [\n        {\n          id: 1,\n          title: \"Home\",\n          icon: faHouseUser,\n          selected: false\n        },\n        {\n          id: 2,\n          title: \"Apps\",\n          icon: faThLarge,\n          selected: false\n        },\n        {\n          id: 3,\n          title: \"Profile\",\n          icon: faUser,\n          selected: false\n        },\n        {\n          id: 4,\n          title: \"Reports\",\n          icon: faFileInvoice,\n          selected: false\n        },\n        {\n          id: 5,\n          title: \"Inside the App\",\n          icon: faDesktop,\n          selected: false\n        },\n        {\n          id: 6,\n          title: \"Natural Language Query\",\n          icon: faDesktop,\n          selected: false\n        }\n      ],\n      expand: false\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleClick(e) {\n    this.setState({ expand: true });\n    this.props.onSideBarExpanded(true);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.setState({\n        expand: false\n      });\n      this.props.onSideBarExpanded(false);\n    }\n  }\n\n  renderItems() {\n    const { navItems } = this.state;\n    return navItems.map(navItem => (\n      <SidePaneItem\n        key={navItem.id}\n        title={navItem.title}\n        icon={navItem.icon}\n        selected={navItem.selected}\n      />\n    ));\n  }\n\n  renderProfile() {\n    return (\n      <div className={\"profile-container\"}>\n        <img alt=\"avatar-alt\" className={\"avatar\"} src={avatar} />\n        <span className={\"name\"}>Allie Sherman</span>\n        <span className={\"title\"}>UI/UX Engineer</span>\n      </div>\n    );\n  }\n\n  renderEmailCount() {\n    return (\n      <div className=\"email-count-wrapper\">\n        <div className=\"count\">10</div>\n        <div className=\"email-envelop\">\n          <FontAwesomeIcon\n            icon={faEnvelope}\n            color={\"#51A94B\"}\n            className={\"icon\"}\n            size={\"lg\"}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { expand } = this.state;\n    const mainClass = `${expand ? \"\" : \"mini\"} side-pane`;\n\n    return (\n      <div\n        className={mainClass}\n        ref={this.setWrapperRef}\n        onClick={e => {\n          this.handleClick(e);\n        }}\n      >\n        {this.renderProfile()}\n        <ul className=\"item-list nav\">{this.renderItems()}</ul>\n        {this.renderEmailCount()}\n      </div>\n    );\n  }\n}\n\nexport default SidePane;\n","import React, { Component } from \"react\";\nimport \"./password-form.scss\";\nimport fromLogo from \"../../assets/form-logo.jpg\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport passwordIcon from \"../../assets/password-icn.png\";\n\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass PasswordForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPassword: null,\n      newPassword: null,\n      confirmPassword: null,\n      invalid: false\n    };\n  }\n\n  validatePasswords() {\n    const { oldPassword, newPassword, confirmPassword } = this.state;\n    if (oldPassword && newPassword && confirmPassword) {\n      this.setState({ invalid: newPassword !== confirmPassword });\n    }\n  }\n\n  onOldPasswordChange(value) {\n    this.setState({ oldPassword: value });\n  }\n\n  onNewPasswordChange(value) {\n    this.setState({ newPassword: value }, () => {\n      this.validatePasswords();\n    });\n  }\n\n  onConfirmPasswordChange(value) {\n    this.setState({ confirmPassword: value }, () => {\n      this.validatePasswords();\n    });\n  }\n\n  render() {\n    const { invalid } = this.state;\n    return (\n      <div className=\"password-form container\">\n        <img alt=\"password-icn\" src={fromLogo} className=\"form-logo\" />\n        <span className=\"green-text\">Inside The App</span>\n        <span className=\"form-text\">\n          Enter the new password then your password will change! Dont forget it\n          again\n        </span>\n        <Form>\n          <Form.Group controlId=\"oldPassword\">\n            <img\n              alt=\"password-icn\"\n              src={passwordIcon}\n              className={\"password-icn\"}\n            />\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Old Password\"\n              onChange={e => this.onOldPasswordChange(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"newPassword\">\n            <img\n              alt=\"password-icn\"\n              src={passwordIcon}\n              className={\"password-icn\"}\n            />\n            <Form.Control\n              type=\"password\"\n              placeholder=\"New Password\"\n              onChange={e => this.onNewPasswordChange(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <img\n              alt=\"password-icn\"\n              src={passwordIcon}\n              className={\"password-icn\"}\n            />\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={e => this.onConfirmPasswordChange(e.target.value)}\n            />\n          </Form.Group>\n\n          {invalid && (\n            <div className=\"form-error\">\n              <FontAwesomeIcon icon={faExclamationTriangle} color={\"red\"} />\n              <span>Passwords do not match.</span>\n            </div>\n          )}\n\n          {!invalid && (\n            <div className=\"form-error\">\n              <span>&nbsp;</span>\n            </div>\n          )}\n\n          <div className=\"form-footer\">\n            <Button variant=\"dark\" type=\"submit\">\n              Set Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default PasswordForm;\n","import React, { Component } from \"react\";\nimport SidePane from \"../../components/side-pane/SidePane\";\nimport PasswordForm from \"../../components/password-form/PasswordForm\";\n\nimport \"./change-password.scss\";\n\nclass ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false\n    };\n  }\n\n  handleExpand(expanded) {\n    this.setState({\n      expanded\n    });\n  }\n\n  render() {\n    const { expanded } = this.state;\n    return (\n      <div className=\"change-password\">\n        <SidePane onSideBarExpanded={expanded => this.handleExpand(expanded)} />\n        <div\n          style={{\n            width: expanded ? \"calc(100% - 235px)\" : \"100%\",\n            marginLeft: expanded ? \"235px\" : \"0px\",\n            transition: \"0.4s\"\n          }}\n        >\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item green\">\n                <a href=\"/\">Inside The App</a>\n              </li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                Dashboard\n              </li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                Inside The App\n              </li>\n            </ol>\n          </nav>\n          <PasswordForm />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import React from \"react\";\nimport { FormControl } from \"react-bootstrap\";\n\nimport \"./header.scss\";\nimport {\n  faSearch,\n  faEnvelope,\n  faBell\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport avatar from \"../../assets/avatar.png\";\n\nconst Header = () => {\n  return (\n    <div className=\"nav nav-header\">\n      <img\n        alt=\"logo-icn\"\n        className={\"logo\"}\n        src={\n          \"https://trabeya.com/wp-content/uploads/2018/06/Trabeya-01-02-01.png\"\n        }\n      />\n\n      <div className=\"search\">\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <FontAwesomeIcon\n          icon={faSearch}\n          className={\"icon\"}\n          color={\"white\"}\n          size={\"lg\"}\n        />\n        <FormControl\n          type=\"text\"\n          value=\"2:36 PM Today March 2020\"\n          className=\"mr-sm-n5\"\n        />\n      </div>\n      <div className=\"profile-content\">\n        <FontAwesomeIcon\n          icon={faEnvelope}\n          className={\"icon\"}\n          color={\"#51A94B\"}\n          size={\"lg\"}\n        />\n        <FontAwesomeIcon\n          icon={faBell}\n          className={\"icon\"}\n          color={\"#51A94B\"}\n          size={\"lg\"}\n        />\n        <span className=\"name\">Allie Sherman</span>\n        <img alt=\"avatar\" className=\"avatar\" src={avatar} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./footer.scss\";\n\nconst Footer = () => {\n  return <div className=\"footer\">Designed and powered by Trabeya</div>;\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\n\nimport ChangePassword from \"./views/change-password/ChangePassword\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\n\nfunction App() {\n  return (\n      <div>\n        <Header />\n        <ChangePassword/>\n        <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}